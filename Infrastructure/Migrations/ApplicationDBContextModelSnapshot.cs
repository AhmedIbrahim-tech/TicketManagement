// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Governorate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Nasr City",
                            Color = 0,
                            CreationDate = new DateTime(2024, 8, 21, 11, 46, 31, 760, DateTimeKind.Utc).AddTicks(1298),
                            District = "District 1",
                            Governorate = "Cairo",
                            PhoneNumber = "01234567890",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            City = "Dokki",
                            Color = 0,
                            CreationDate = new DateTime(2024, 8, 21, 11, 36, 31, 760, DateTimeKind.Utc).AddTicks(1308),
                            District = "District 2",
                            Governorate = "Giza",
                            PhoneNumber = "09876543210",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            City = "Sidi Gaber",
                            Color = 0,
                            CreationDate = new DateTime(2024, 8, 21, 11, 16, 31, 760, DateTimeKind.Utc).AddTicks(1309),
                            District = "District 3",
                            Governorate = "Alexandria",
                            PhoneNumber = "01112223344",
                            Status = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
